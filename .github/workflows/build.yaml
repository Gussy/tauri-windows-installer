name: "Build Tauri App Installer"

on:
  push:
    branches:
      - main
    tags:
      - v*

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    name: "Build (${{ matrix.arch }})"
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            arch: windows-amd64
            binary_suffix: x86_64

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      - name: Setup node
        uses: actions/setup-node@v4.0.3
        with:
          node-version: 21

      - name: Install rust stable (windows only)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4.0.2
        with:
          path: |
            C:\Users\runneradmin\.cargo\registry
            C:\Users\runneradmin\.cargo\git
            C:\Users\runneradmin\.rustup
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cargo-registry-

      - name: Cache target directory
        uses: actions/cache@v4.0.2
        with:
          path: target
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-cargo-target-

      - name: Install pnpm packages
        working-directory: demo-app
        run: |
          corepack enable pnpm
          pnpm i --fix-lockfile

      - name: Build rust libraries
        run: |
          cargo build --release

      - name: Build setup binary
        run: |
          cargo build --package tauri-windows-installer --bin setup --release

      - name: Build Tauri application
        working-directory: demo-app
        run: |
          pnpm tauri build

      - name: Package the application installer
        run: |
          cargo run --package bundler-app  --release -- -t .\demo-app\src-tauri\tauri.conf.json -a .\target\release\demo-app.exe

      - name: Upload build artifacts
        if: success() && github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4.3.4
        with:
          name: demo-app-setup-${{ matrix.binary_suffix }}
          path: |
            demo-app-setup.exe

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            target/release/demo-app.exe
            demo-app-setup.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          body: "Release ${{ github.ref }}"
          draft: false
          prerelease: false
